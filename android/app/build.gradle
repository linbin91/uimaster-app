apply plugin: 'com.android.application'
apply plugin: 'newlens'

android {
    compileSdkVersion 22
    buildToolsVersion '21.1.2'
    signingConfigs {
        unsigned {
        }
        release {
            keyAlias 'demo.keystore'
            keyPassword 'demokey'
            storeFile file('C:\\uimaster\\uimaster-app\\android\\demo.keystore')
            //storeFile file('/Users/sql/java-workspace/uimaster-app/android/demo.keystore')
            storePassword 'demokey'
        }
    }
    defaultConfig {
        applicationId "org.shaolin.uimaster.app"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 47
        versionName "2.4"
        signingConfig signingConfigs.release
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    // 移除lint检查的error
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile project(':social_sdk_library_project')
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.github.chrisbanes.photoview:library:1.2.3'
    compile 'com.android.support:support-v4:22.2.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.networkbench.newlens.agent.android:nbs.newlens.agent:2.2.5'
    compile 'com.google.zxing:core:3.2.0'
    compile 'com.joanzapata.android:android-iconify:1.0.9'
    compile "org.java-websocket:Java-WebSocket:1.3.0"
    //provided 'org.shaolin.bmdp:uipage:1.0.0-SNAPSHOT'
}

task('cleanResource',type: Delete){
    delete('src/main/assets/uimaster')
}

task('copyResource', type: Copy,dependsOn: cleanResource) {
    from 'C:\\uimaster\\deploy\\apache-tomcat-8.0.9\\webapps\\uimaster'
    into('src/main/assets/uimaster')
    include('js/**/*.*')
    include('css/**/*.*')
    include('baserule/**/*.*')
    include('images/**/*.*')
}

preBuild.dependsOn copyResource

// 配置签名文件以及相关的账号信息
File propFile = new File('sign.properties')
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}
